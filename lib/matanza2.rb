require "matanza2/engine"
require "trello"
require "github_api"

module Matanza2
	@@config = {}

	def self.configure &block
		block.call @@config
		config_trello
		config_github
	end

	def self.hack url_card
		card = get_card url_card		
		issue = create_issue card.name
		code_issue = get_issue_code issue

		update_card card, code_issue
		code_issue[:code]
	end

	private
	
	def self.get_card url_card
		begin
			me = Trello::Member.find(@@config[:trello_user_name])
			board = me.boards.select{|x| x.name.upcase == @@config[:trello_board_name].upcase}.first
			board.cards.select{|x| x.url.index(url_card)}.first
		rescue
			raise 'Url card wrong'
		end
	end

	def self.update_card card, issue_code
		card.name = "[##{issue_code[:code]}] #{card.name}"
		card.desc = "#{issue_code[:link]} #{card.desc}"
		card.save
	end

	def self.create_issue title
		github_auth = Github.new :oauth_token => @@config[:github_oauth_token]
		github_auth.issues.create user: @@config[:github_user], repo: @@config[:github_repo], title: title
	end

	def self.get_issue_code issue
		url_issue = issue.html_url
		code = url_issue[url_issue.rindex('/')+1..url_issue.size]
		code_html_issue = {code: code, 
											 link: "Link to code: [#{code}](#{url_issue})"}
	end

	def self.config_trello
		puts 'configure trello'
	  # API key generated by visiting https://trello.com/1/appKey/generate
	  # https://trello.com/app-key
		# https://trello.com/1/connect?key=YOUR_KEY&name=BOARD_NAME&expiration=never&response_type=token&scope=read,write
	  Trello.configure do |config|
		  config.developer_public_key = @@config[:trello_developer_public_key]
		  config.member_token = @@config[:trello_member_token]
		end
	end

	def self.config_github
		puts 'configure github'
		# https://github.com/settings/applications
		# Personal access tokens
	end
end
